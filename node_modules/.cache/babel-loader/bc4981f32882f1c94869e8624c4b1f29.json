{"ast":null,"code":"import _classCallCheck from \"/Users/ksin/grids/Bloc-Chat-React-extra-features/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ksin/grids/Bloc-Chat-React-extra-features/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ksin/grids/Bloc-Chat-React-extra-features/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ksin/grids/Bloc-Chat-React-extra-features/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ksin/grids/Bloc-Chat-React-extra-features/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ksin/grids/Bloc-Chat-React-extra-features/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ksin/grids/Bloc-Chat-React-extra-features/src/components/MessageList.js\";\nimport React, { Component } from 'react';\nimport * as firebase from 'firebase';\n\nvar messageList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(messageList, _Component);\n\n  function messageList(props) {\n    var _this;\n\n    _classCallCheck(this, messageList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(messageList).call(this, props));\n    _this.state = {\n      userName: ' ',\n      sentAt: ' ',\n      roomId: ' ',\n      content: ' ',\n      messages: []\n    };\n    _this.messagesRef = _this.props.firebase.database().ref('messages');\n    _this.createMessage = _this.createMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.messageContent = _this.messageContent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.convertMillisToTime = _this.convertMillisToTime.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(messageList, [{\n    key: \"createMessage\",\n    value: function createMessage(e) {\n      e.preventDefault();\n      this.messagesRef.push({\n        userName: this.state.userName,\n        content: this.state.content,\n        sentAt: this.state.sentAt,\n        roomId: this.state.roomId\n      });\n      this.setState({\n        userName: '',\n        content: '',\n        sentAt: '',\n        roomId: ''\n      });\n      e.target.reset();\n    }\n  }, {\n    key: \"messageContent\",\n    value: function messageContent(e) {\n      e.preventDefault();\n      this.setState({\n        username: this.props.user,\n        content: e.target.value,\n        sentAt: firebase.database.ServerValue.TIMESTAMP,\n        roomId: this.props.activeRoom\n      });\n    }\n  }, {\n    key: \"convertMillisToTime\",\n    value: function convertMillisToTime(timespan) {\n      var time = new Date(timespan);\n      var theyear = time.getFullYear();\n      var themonth = time.getMonth() + 1;\n      var thetoday = time.getDate();\n      var realTime = time.toLocaleTimeString();\n      return realTime;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        userName: this.props.user\n      });\n      this.messagesRef.on('child_added', function (snapshot) {\n        var message = snapshot.val();\n        message.key = snapshot.key;\n\n        _this2.setState({\n          messages: _this2.state.messages.concat(message)\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var activeRoom = this.props.activeRoom;\n      var currentMessages = this.state.messages.map(function (message) {\n        if (message.roomId === activeRoom) {\n          return React.createElement(\"li\", {\n            key: message.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, \":\", message.userName, \":\", message.content, _this3.convertMillisToTime(message.sentAt));\n        }\n\n        return null;\n      });\n      var messageBox = React.createElement(\"form\", {\n        onSubmit: this.createMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        disabled: this.props.disabled,\n        onChange: this.messageContent,\n        value: this.state.content,\n        placeholder: \"Type your message and hit ENTER\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        className: \"message-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \">\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" \", currentMessages, \" \"), React.createElement(\"div\", {\n        className: \"send-message-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, messageBox, \" \"));\n    }\n  }]);\n\n  return messageList;\n}(Component);\n\nexport default messageList;","map":{"version":3,"sources":["/Users/ksin/grids/Bloc-Chat-React-extra-features/src/components/MessageList.js"],"names":["React","Component","firebase","messageList","props","state","userName","sentAt","roomId","content","messages","messagesRef","database","ref","createMessage","bind","messageContent","convertMillisToTime","e","preventDefault","push","setState","target","reset","username","user","value","ServerValue","TIMESTAMP","activeRoom","timespan","time","Date","theyear","getFullYear","themonth","getMonth","thetoday","getDate","realTime","toLocaleTimeString","on","snapshot","message","val","key","concat","currentMessages","map","messageBox","disabled"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport* as firebase from 'firebase';\n\nclass messageList extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n        userName:' ',\n        sentAt:' ',\n        roomId:' ',\n        content:' ',\n        messages: [],\n  };\n  this.messagesRef = this.props.firebase.database().ref('messages');\n  this.createMessage = this.createMessage.bind(this);\n  this.messageContent = this.messageContent.bind(this);\n  this.convertMillisToTime=this.convertMillisToTime.bind(this);\n };\n\n\n\n  createMessage(e){\n    e.preventDefault();\n    this.messagesRef.push({\n      userName:this.state.userName,\n      content:this.state.content,\n      sentAt:this.state.sentAt,\n      roomId:this.state.roomId,\n    });\n\n    this.setState({\n        userName:'',\n        content:'',\n        sentAt:'',\n        roomId:'',\n    });\n    e.target.reset()\n  };\n\n\n\n  messageContent(e){\n    e.preventDefault();\n     this.setState({\n      username:this.props.user,\n      content:e.target.value,\n      sentAt:firebase.database.ServerValue.TIMESTAMP,\n      roomId:this.props.activeRoom\n    })\n  }\n\n\n  convertMillisToTime(timespan){\n    let time = new Date(timespan);\n    var theyear = time.getFullYear();\n    var themonth = time.getMonth() + 1;\n    var thetoday = time.getDate();\n    var realTime = time.toLocaleTimeString();\n\n    return realTime\n\n\n  }\n\n\n    componentDidMount() {\n      this.setState({userName: this.props.user})\n      this.messagesRef.on('child_added', snapshot => {\n         const message = snapshot.val();\n         message.key = snapshot.key;\n         this.setState({ messages: this.state.messages.concat( message ) })\n       });\n}\n\nrender() {\n  const activeRoom = this.props.activeRoom\n\n  const currentMessages= (\n    this.state.messages.map((message)=>{\n      if (message.roomId===activeRoom){\n        return <li key={message.key}>:{message.userName}:{message.content}\n        {this.convertMillisToTime(message.sentAt)}</li>\n          }\n        return null;\n    })\n  );\n  const messageBox=(\n    <form  onSubmit={this.createMessage}  >\n       <input\n             disabled={this.props.disabled}\n             onChange={this.messageContent}\n             value={this.state.content}\n             placeholder=\"Type your message and hit ENTER\"\n             type=\"text\" />\n               </form>\n\n\n             )\n  return (\n   <div className=\"message-list\">>\n   <div> {currentMessages} </div>\n    <div className=\"send-message-form\">{messageBox} </div>\n\n      </div>\n\n    );\n  }\n}\n\n\n\nexport default messageList;\n"]},"metadata":{},"sourceType":"module"}